{
  "info": {
    "_postman_id": "a24f5b69-8bca-4e4d-a046-04e5d25f8705",
    "name": "CineVibe API Collection",
    "description": "Collection of API endpoints for CineVibe movie social platform",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:8081"
    },
    {
      "key": "firebase_web_api_key",
      "value": "YOUR_FIREBASE_WEB_API_KEY",
      "description": "Enter your Firebase Web API key here"
    }
  ],
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{jwt_token}}",
        "type": "string"
      }
    ]
  },
  "item": [
    {
      "name": "Firebase Authentication",
      "item": [
        {
          "name": "Get Firebase Authentication Guide",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/test/auth-guide",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "test",
                "auth-guide"
              ]
            },
            "description": "Xem hướng dẫn đầy đủ về quy trình xác thực Firebase"
          },
          "response": []
        },
        {
          "name": "Get Custom Token",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/test/token/test_user_uid",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "test",
                "token",
                "test_user_uid"
              ]
            },
            "description": "Lấy Firebase custom token (cần đổi thành ID token)"
          },
          "response": []
        },
        {
          "name": "Exchange Custom Token for ID Token",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"token\": \"CUSTOM_TOKEN_FROM_PREVIOUS_STEP\",\n    \"returnSecureToken\": true\n}"
            },
            "url": {
              "raw": "https://identitytoolkit.googleapis.com/v1/accounts:signInWithCustomToken?key={{firebase_web_api_key}}",
              "protocol": "https",
              "host": [
                "identitytoolkit",
                "googleapis",
                "com"
              ],
              "path": [
                "v1",
                "accounts:signInWithCustomToken"
              ],
              "query": [
                {
                  "key": "key",
                  "value": "{{firebase_web_api_key}}"
                }
              ]
            },
            "description": "Đổi custom token thành ID token. Lưu ý: Bạn cần nhập Firebase Web API Key của mình vào biến môi trường."
          },
          "response": []
        },
        {
          "name": "Verify Firebase Token",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"token\": \"YOUR_ID_TOKEN\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/test/verify-token",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "test",
                "verify-token"
              ]
            },
            "description": "Kiểm tra và hiển thị thông tin từ Firebase ID token"
          },
          "response": []
        },
        {
          "name": "Get Test Direct Token (Dev Mode)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/test/direct-token/test_user_uid",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "test",
                "direct-token",
                "test_user_uid"
              ]
            },
            "description": "Lấy token test trực tiếp (chỉ dùng trong môi trường phát triển)"
          },
          "response": []
        }
      ],
      "description": "Các endpoint liên quan đến xác thực và lấy token Firebase"
    },
    {
      "name": "Auth & User Management",
      "item": [
        {
          "name": "Register New User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"firebaseUid\": \"test_user_uid\",\n    \"email\": \"test@example.com\",\n    \"displayName\": \"Test User\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/user/register",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "user",
                "register"
              ]
            },
            "description": "Register a new user in the system"
          },
          "response": []
        },
        {
          "name": "Get Current User",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/user/me",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "user",
                "me"
              ]
            },
            "description": "Get details of the currently authenticated user"
          },
          "response": []
        },
        {
          "name": "Update User Profile",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"displayName\": \"Updated Name\",\n    \"bio\": \"My updated bio\",\n    \"profileImageUrl\": \"https://example.com/img.jpg\",\n    \"favoriteGenre\": \"Action\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/user/profile",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "user",
                "profile"
              ]
            },
            "description": "Update the current user's profile"
          },
          "response": []
        },
        {
          "name": "Generate Test Token",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/test/token/test_user_uid",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "test",
                "token",
                "test_user_uid"
              ]
            },
            "description": "Get a test JWT token for development purposes"
          },
          "response": []
        }
      ],
      "description": "Endpoints for user registration, authentication, and profile management"
    },
    {
      "name": "Movie Reviews",
      "item": [
        {
          "name": "Get User's Reviews",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/reviews/my?page=0&size=10",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "reviews",
                "my"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "0"
                },
                {
                  "key": "size",
                  "value": "10"
                }
              ]
            },
            "description": "Get all reviews created by the current user"
          },
          "response": []
        },
        {
          "name": "Get Movie Reviews",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/reviews/movie/550?page=0&size=10",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "reviews",
                "movie",
                "550"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "0"
                },
                {
                  "key": "size",
                  "value": "10"
                }
              ]
            },
            "description": "Get reviews for a specific movie by TMDB ID"
          },
          "response": []
        },
        {
          "name": "Create Review",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"tmdbMovieId\": 550,\n    \"rating\": 4.5,\n    \"content\": \"This is a great movie. I really enjoyed it!\",\n    \"movieTitle\": \"Fight Club\",\n    \"moviePosterPath\": \"/pB8BM7pdSp6B6Ih7QZ4DrQ3PmJK.jpg\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/reviews",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "reviews"
              ]
            },
            "description": "Create a new review for a movie"
          },
          "response": []
        },
        {
          "name": "Update Review",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"rating\": 5.0,\n    \"content\": \"This is my updated review content.\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/reviews/1",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "reviews",
                "1"
              ]
            },
            "description": "Update an existing review"
          },
          "response": []
        },
        {
          "name": "Get Review by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/reviews/1",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "reviews",
                "1"
              ]
            },
            "description": "Get a review by its ID"
          },
          "response": []
        },
        {
          "name": "Delete Review",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/reviews/1",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "reviews",
                "1"
              ]
            },
            "description": "Delete a review by its ID"
          },
          "response": []
        },
        {
          "name": "Like Review",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/reviews/1/like",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "reviews",
                "1",
                "like"
              ]
            },
            "description": "Like a review"
          },
          "response": []
        },
        {
          "name": "Unlike Review",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/reviews/1/like",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "reviews",
                "1",
                "like"
              ]
            },
            "description": "Unlike a previously liked review"
          },
          "response": []
        },
        {
          "name": "Check if User Has Reviewed Movie",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/reviews/check/550",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "reviews",
                "check",
                "550"
              ]
            },
            "description": "Check if the current user has already reviewed a specific movie"
          },
          "response": []
        }
      ],
      "description": "Endpoints for managing movie reviews"
    },
    {
      "name": "Comments",
      "item": [
        {
          "name": "Get Review Comments",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/comments/review/1?page=0&size=20",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "comments",
                "review",
                "1"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "0"
                },
                {
                  "key": "size",
                  "value": "20"
                }
              ]
            },
            "description": "Get comments for a specific review"
          },
          "response": []
        },
        {
          "name": "Get Comment by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/comments/1",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "comments",
                "1"
              ]
            },
            "description": "Get a comment by its ID"
          },
          "response": []
        },
        {
          "name": "Create Comment",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"reviewId\": 1,\n    \"content\": \"I agree with your review!\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/comments",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "comments"
              ]
            },
            "description": "Create a new comment on a review"
          },
          "response": []
        },
        {
          "name": "Update Comment",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"content\": \"Updated comment content\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/comments/1",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "comments",
                "1"
              ]
            },
            "description": "Update an existing comment"
          },
          "response": []
        },
        {
          "name": "Delete Comment",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/comments/1",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "comments",
                "1"
              ]
            },
            "description": "Delete a comment by its ID"
          },
          "response": []
        },
        {
          "name": "Like Comment",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/comments/1/like",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "comments",
                "1",
                "like"
              ]
            },
            "description": "Like a comment"
          },
          "response": []
        },
        {
          "name": "Unlike Comment",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/comments/1/like",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "comments",
                "1",
                "like"
              ]
            },
            "description": "Unlike a previously liked comment"
          },
          "response": []
        }
      ],
      "description": "Endpoints for managing comments on reviews"
    },
    {
      "name": "Watchlists",
      "item": [
        {
          "name": "Get User's Watchlists",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/watchlists/my",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "watchlists",
                "my"
              ]
            },
            "description": "Get all watchlists belonging to the current user"
          },
          "response": []
        },
        {
          "name": "Get Public Watchlists",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/watchlists/public",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "watchlists",
                "public"
              ]
            },
            "description": "Get all public watchlists"
          },
          "response": []
        },
        {
          "name": "Get Watchlist by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/watchlists/1",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "watchlists",
                "1"
              ]
            },
            "description": "Get a watchlist by its ID"
          },
          "response": []
        },
        {
          "name": "Create Watchlist",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"My Favorites\",\n    \"description\": \"My favorite movies\",\n    \"isPublic\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/watchlists",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "watchlists"
              ]
            },
            "description": "Create a new watchlist"
          },
          "response": []
        },
        {
          "name": "Update Watchlist",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Updated Watchlist Name\",\n    \"description\": \"Updated description\",\n    \"isPublic\": false\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/watchlists/1",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "watchlists",
                "1"
              ]
            },
            "description": "Update an existing watchlist"
          },
          "response": []
        },
        {
          "name": "Delete Watchlist",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/watchlists/1",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "watchlists",
                "1"
              ]
            },
            "description": "Delete a watchlist by its ID"
          },
          "response": []
        }
      ],
      "description": "Endpoints for managing watchlists"
    },
    {
      "name": "Watchlist Items",
      "item": [
        {
          "name": "Get Watchlist Items",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/watchlists/1/items",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "watchlists",
                "1",
                "items"
              ]
            },
            "description": "Get all movies in a specific watchlist"
          },
          "response": []
        },
        {
          "name": "Add Movie to Watchlist",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"tmdbMovieId\": 550,\n    \"movieTitle\": \"Fight Club\",\n    \"moviePosterPath\": \"/pB8BM7pdSp6B6Ih7QZ4DrQ3PmJK.jpg\",\n    \"notes\": \"Want to watch this soon\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/watchlists/1/items",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "watchlists",
                "1",
                "items"
              ]
            },
            "description": "Add a movie to a watchlist"
          },
          "response": []
        },
        {
          "name": "Update Watchlist Item",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"notes\": \"Updated notes for this movie\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/watchlists/1/items/1",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "watchlists",
                "1",
                "items",
                "1"
              ]
            },
            "description": "Update a watchlist item"
          },
          "response": []
        },
        {
          "name": "Remove Movie from Watchlist",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/watchlists/1/items/1",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "watchlists",
                "1",
                "items",
                "1"
              ]
            },
            "description": "Remove a movie from a watchlist"
          },
          "response": []
        },
        {
          "name": "Check if Movie is in Watchlist",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/watchlists/1/items/check/550",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "watchlists",
                "1",
                "items",
                "check",
                "550"
              ]
            },
            "description": "Check if a movie is in a specific watchlist"
          },
          "response": []
        }
      ],
      "description": "Endpoints for managing movies within watchlists"
    },
    {
      "name": "User Connections",
      "item": [
        {
          "name": "Get Following",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/connections/following?page=0&size=20",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "connections",
                "following"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "0"
                },
                {
                  "key": "size",
                  "value": "20"
                }
              ]
            },
            "description": "Get all users the current user follows"
          },
          "response": []
        },
        {
          "name": "Get Followers",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/connections/followers?page=0&size=20",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "connections",
                "followers"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "0"
                },
                {
                  "key": "size",
                  "value": "20"
                }
              ]
            },
            "description": "Get all users who follow the current user"
          },
          "response": []
        },
        {
          "name": "Get Pending Requests",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/connections/pending?page=0&size=20",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "connections",
                "pending"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "0"
                },
                {
                  "key": "size",
                  "value": "20"
                }
              ]
            },
            "description": "Get all pending follow requests for the current user"
          },
          "response": []
        },
        {
          "name": "Follow User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"targetUserUid\": \"another_user_uid\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/connections/follow",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "connections",
                "follow"
              ]
            },
            "description": "Follow another user"
          },
          "response": []
        },
        {
          "name": "Accept Follow Request",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/connections/1/accept",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "connections",
                "1",
                "accept"
              ]
            },
            "description": "Accept a follow request"
          },
          "response": []
        },
        {
          "name": "Reject Follow Request",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/connections/1/reject",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "connections",
                "1",
                "reject"
              ]
            },
            "description": "Reject a follow request"
          },
          "response": []
        },
        {
          "name": "Unfollow User",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/connections/unfollow/another_user_uid",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "connections",
                "unfollow",
                "another_user_uid"
              ]
            },
            "description": "Stop following a user"
          },
          "response": []
        },
        {
          "name": "Remove Follower",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/connections/followers/follower_uid",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "connections",
                "followers",
                "follower_uid"
              ]
            },
            "description": "Remove a user from your followers"
          },
          "response": []
        },
        {
          "name": "Check Connection Status",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/connections/check/another_user_uid",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "connections",
                "check",
                "another_user_uid"
              ]
            },
            "description": "Check if you're following another user"
          },
          "response": []
        }
      ],
      "description": "Endpoints for managing user connections (follows, friendships)"
    },
    {
      "name": "App Info",
      "item": [
        {
          "name": "Get Build Version",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/info/build-version",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "info",
                "build-version"
              ]
            },
            "description": "Get the application build version"
          },
          "response": []
        },
        {
          "name": "Get Java Version",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/info/java-version",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "info",
                "java-version"
              ]
            },
            "description": "Get the Java version used by the application"
          },
          "response": []
        },
        {
          "name": "Get Contact Info",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/info/contact-info",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "info",
                "contact-info"
              ]
            },
            "description": "Get application contact information"
          },
          "response": []
        }
      ],
      "description": "Endpoints for application information"
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    }
  ]
}